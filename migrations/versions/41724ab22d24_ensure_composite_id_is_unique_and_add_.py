"""ensure composite id is unique and add admin flag to usesr types

Revision ID: 41724ab22d24
Revises: 5bce1f09cb0e
Create Date: 2022-04-12 19:36:53.027533

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '41724ab22d24'
down_revision = '5bce1f09cb0e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'amenity_tags', ['id'])
    op.create_unique_constraint(None, 'comments', ['id'])
    op.create_unique_constraint(None, 'promotions', ['id'])
    op.create_unique_constraint(None, 'ratings', ['id'])
    op.create_unique_constraint(None, 'reviews', ['id'])
    op.add_column('user_types', sa.Column('is_admin', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_types', 'is_admin')
    op.drop_constraint(None, 'reviews', type_='unique')
    op.drop_constraint(None, 'ratings', type_='unique')
    op.drop_constraint(None, 'promotions', type_='unique')
    op.drop_constraint(None, 'comments', type_='unique')
    op.drop_constraint(None, 'amenity_tags', type_='unique')
    # ### end Alembic commands ###
